
Lab5-USART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000282  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000022e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000282  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000002f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c89  00000000  00000000  00000344  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000073b  00000000  00000000  00000fcd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004c5  00000000  00000000  00001708  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  00001bd0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ea  00000000  00000000  00001c38  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000006e  00000000  00000000  00002022  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00002090  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 5b 00 	call	0xb6	; 0xb6 <main>
  78:	0c 94 15 01 	jmp	0x22a	; 0x22a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <USART_Init>:
#include "Lab5-USART.h"

void USART_Init( uint16_t ubrr)
{
	/*Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
  80:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
  84:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	//Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
  88:	88 e1       	ldi	r24, 0x18	; 24
  8a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	/* Set frame format: 8data, 1stop bit */
	UCSR0C = (3<<UCSZ00);
  8e:	86 e0       	ldi	r24, 0x06	; 6
  90:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  94:	08 95       	ret

00000096 <USART_Receive>:
}

unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) );
  96:	e0 ec       	ldi	r30, 0xC0	; 192
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	80 81       	ld	r24, Z
  9c:	88 23       	and	r24, r24
  9e:	ec f7       	brge	.-6      	; 0x9a <USART_Receive+0x4>
	/* Get and return received data from buffer */
	return UDR0;
  a0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
  a4:	08 95       	ret

000000a6 <USART_Transmit_char>:

void USART_Transmit_char( uint8_t data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) );
  a6:	e0 ec       	ldi	r30, 0xC0	; 192
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	90 81       	ld	r25, Z
  ac:	95 ff       	sbrs	r25, 5
  ae:	fd cf       	rjmp	.-6      	; 0xaa <USART_Transmit_char+0x4>
	/* Put data into buffer, sends the data */
	UDR0 = data;
  b0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  b4:	08 95       	ret

000000b6 <main>:

#include "Lab5-USART.h"

int main(void)
{
    USART_Init(MYUBRR);
  b6:	80 e1       	ldi	r24, 0x10	; 16
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	0e 94 40 00 	call	0x80	; 0x80 <USART_Init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	2f e3       	ldi	r18, 0x3F	; 63
  c0:	8d e0       	ldi	r24, 0x0D	; 13
  c2:	93 e0       	ldi	r25, 0x03	; 3
  c4:	21 50       	subi	r18, 0x01	; 1
  c6:	80 40       	sbci	r24, 0x00	; 0
  c8:	90 40       	sbci	r25, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <main+0xe>
  cc:	00 c0       	rjmp	.+0      	; 0xce <main+0x18>
  ce:	00 00       	nop
	// Welcome message
	_delay_ms(1000);
	USART_Transmit_char('C');
  d0:	83 e4       	ldi	r24, 0x43	; 67
  d2:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('o');
  d6:	8f e6       	ldi	r24, 0x6F	; 111
  d8:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('n');
  dc:	8e e6       	ldi	r24, 0x6E	; 110
  de:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('g');
  e2:	87 e6       	ldi	r24, 0x67	; 103
  e4:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('r');
  e8:	82 e7       	ldi	r24, 0x72	; 114
  ea:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('a');
  ee:	81 e6       	ldi	r24, 0x61	; 97
  f0:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('t');
  f4:	84 e7       	ldi	r24, 0x74	; 116
  f6:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('u');
  fa:	85 e7       	ldi	r24, 0x75	; 117
  fc:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('l');
 100:	8c e6       	ldi	r24, 0x6C	; 108
 102:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('a');
 106:	81 e6       	ldi	r24, 0x61	; 97
 108:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('t');
 10c:	84 e7       	ldi	r24, 0x74	; 116
 10e:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('i');
 112:	89 e6       	ldi	r24, 0x69	; 105
 114:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('o');
 118:	8f e6       	ldi	r24, 0x6F	; 111
 11a:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('n');
 11e:	8e e6       	ldi	r24, 0x6E	; 110
 120:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('s');
 124:	83 e7       	ldi	r24, 0x73	; 115
 126:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('!');
 12a:	81 e2       	ldi	r24, 0x21	; 33
 12c:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char(' ');
 130:	80 e2       	ldi	r24, 0x20	; 32
 132:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('Y');
 136:	89 e5       	ldi	r24, 0x59	; 89
 138:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('o');
 13c:	8f e6       	ldi	r24, 0x6F	; 111
 13e:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('u');
 142:	85 e7       	ldi	r24, 0x75	; 117
 144:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char(' ');
 148:	80 e2       	ldi	r24, 0x20	; 32
 14a:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('g');
 14e:	87 e6       	ldi	r24, 0x67	; 103
 150:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('o');
 154:	8f e6       	ldi	r24, 0x6F	; 111
 156:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('t');
 15a:	84 e7       	ldi	r24, 0x74	; 116
 15c:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char(' ');
 160:	80 e2       	ldi	r24, 0x20	; 32
 162:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('t');
 166:	84 e7       	ldi	r24, 0x74	; 116
 168:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('h');
 16c:	88 e6       	ldi	r24, 0x68	; 104
 16e:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('e');
 172:	85 e6       	ldi	r24, 0x65	; 101
 174:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char(' ');
 178:	80 e2       	ldi	r24, 0x20	; 32
 17a:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('s');
 17e:	83 e7       	ldi	r24, 0x73	; 115
 180:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('e');
 184:	85 e6       	ldi	r24, 0x65	; 101
 186:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('r');
 18a:	82 e7       	ldi	r24, 0x72	; 114
 18c:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('i');
 190:	89 e6       	ldi	r24, 0x69	; 105
 192:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('a');
 196:	81 e6       	ldi	r24, 0x61	; 97
 198:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('l');
 19c:	8c e6       	ldi	r24, 0x6C	; 108
 19e:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char(' ');
 1a2:	80 e2       	ldi	r24, 0x20	; 32
 1a4:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('i');
 1a8:	89 e6       	ldi	r24, 0x69	; 105
 1aa:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('n');
 1ae:	8e e6       	ldi	r24, 0x6E	; 110
 1b0:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('t');
 1b4:	84 e7       	ldi	r24, 0x74	; 116
 1b6:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('e');
 1ba:	85 e6       	ldi	r24, 0x65	; 101
 1bc:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('r');
 1c0:	82 e7       	ldi	r24, 0x72	; 114
 1c2:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('f');
 1c6:	86 e6       	ldi	r24, 0x66	; 102
 1c8:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('a');
 1cc:	81 e6       	ldi	r24, 0x61	; 97
 1ce:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('c');
 1d2:	83 e6       	ldi	r24, 0x63	; 99
 1d4:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('e');
 1d8:	85 e6       	ldi	r24, 0x65	; 101
 1da:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char(' ');
 1de:	80 e2       	ldi	r24, 0x20	; 32
 1e0:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('t');
 1e4:	84 e7       	ldi	r24, 0x74	; 116
 1e6:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('o');
 1ea:	8f e6       	ldi	r24, 0x6F	; 111
 1ec:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char(' ');
 1f0:	80 e2       	ldi	r24, 0x20	; 32
 1f2:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('w');
 1f6:	87 e7       	ldi	r24, 0x77	; 119
 1f8:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('o');
 1fc:	8f e6       	ldi	r24, 0x6F	; 111
 1fe:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('r');
 202:	82 e7       	ldi	r24, 0x72	; 114
 204:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('k');
 208:	8b e6       	ldi	r24, 0x6B	; 107
 20a:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('!');
 20e:	81 e2       	ldi	r24, 0x21	; 33
 210:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('\r');
 214:	8d e0       	ldi	r24, 0x0D	; 13
 216:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
	USART_Transmit_char('\n');
 21a:	8a e0       	ldi	r24, 0x0A	; 10
 21c:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>

    while (1) 
    {	
		USART_Transmit_char(USART_Receive());
 220:	0e 94 4b 00 	call	0x96	; 0x96 <USART_Receive>
 224:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit_char>
 228:	fb cf       	rjmp	.-10     	; 0x220 <main+0x16a>

0000022a <_exit>:
 22a:	f8 94       	cli

0000022c <__stop_program>:
 22c:	ff cf       	rjmp	.-2      	; 0x22c <__stop_program>
